# name: Docs

# on:
#   release:
#     types: [created]
    
#   push:
#     branches: [ main ]

# permissions:
#     contents: write

# jobs:
#   docs-gen:
#     runs-on: ubuntu-latest


#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 1

#       - name: Set up Python
#         uses: actions/setup-python@v3
#         with:
#           python-version: "3.10"
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           python -m pip install pdoc
#           if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#       - name: Pdoc build
#         run: |
#           export PYTHONPATH='/home/runner/work/Vehicle-Detection/Vehicle-Detection/src'
#           pdoc3 src/ --output-dir docs/ -f
          
#       - name: Deploy docs
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           allow_empty_commit: true
#           personal_token: ${{ secrets.DOCS_DEPLOY_TOKEN }}
#           publish_branch: gh-pages
#           publish_dir: docs/src


name: Docs

# build the documentation whenever there are new commits on main
on:
  push:
    branches:
      - main
    # Alternative: only build for tags.
    # tags:
    #   - '*'

# security: restrict permissions for CI jobs.
permissions:
  contents: write

jobs:
  # Build the documentation and upload the static HTML files as an artifact.
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # ADJUST THIS: install all dependencies (including pdoc)
      - run: |
            python -m pip install --upgrade pip
            python -m pip install pdoc
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # ADJUST THIS: build your documentation into docs/.
      # We use a custom build script for pdoc itself, ideally you just run `pdoc -o docs/ ...` here.
      - run: |
            export PYTHONPATH='/home/runner/work/Vehicle-Detection/Vehicle-Detection/src'
            pdoc src/ --output-dir docs/
            
      - uses: actions/upload-pages-artifact@v3
        with:
          path: docs/

  # Deploy the artifact to GitHub pages.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
